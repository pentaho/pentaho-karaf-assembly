<!--
 ~ This program is free software; you can redistribute it and/or modify it under the
 ~ terms of the GNU Lesser General Public License, version 2.1 as published by the Free Software
 ~ Foundation.
 ~
 ~ You should have received a copy of the GNU Lesser General Public License along with this
 ~ program; if not, you can obtain a copy at http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html
 ~ or from the Free Software Foundation, Inc.,
 ~ 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 ~
 ~ This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 ~ without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 ~ See the GNU Lesser General Public License for more details.
 ~
 ~ Copyright 2017 - 2019 Hitachi Vantara. All rights reserved.
 -->

<features name="pentaho-karaf-features-standard" xmlns="http://karaf.apache.org/xmlns/features/v1.3.0">
  <repository>mvn:org.pentaho/pentaho-osgi-utils/${pentaho-osgi-bundles.version}/xml/features</repository>

  <repository>mvn:org.apache.camel.karaf/apache-camel/${camel.karaf.version}/xml/features</repository>
  <repository>mvn:org.pentaho/pentaho-requirejs-osgi-manager/${pentaho-osgi-bundles.version}/xml/features</repository>
  <repository>mvn:org.pentaho.webpackage/pentaho-webpackage/${pentaho-osgi-bundles.version}/xml/features</repository>

  <repository>mvn:pentaho/pentaho-dataservice/${pdi-dataservice-plugin.version}/xml/features</repository>
  <repository>mvn:org.pentaho.di.plugins/pentaho-streaming-feature/${pdi.version}/xml/features</repository>

  <!-- pdi-platform feature is using spring feature -->
  <repository>mvn:org.hitachivantara.karaf.features/spring32/${project.version}/xml/features</repository>

  <!-- TODO: temporary fix because of pax-keycloak condition on pax-web -->
  <repository>mvn:org.ops4j.pax.keycloak/pax-keycloak-features/RELEASE/xml/features</repository>

  <!--This feature never works reliably due to the asynchronous loading of blueprint files-->
  <!--Putting the feature back so these dependencies will be in the local maven repo in /system-->
  <feature name="pentaho-deployers" version="1.0">
    <feature prerequisite="true">aries-blueprint</feature>
    <feature prerequisite="true">deployer</feature>
    <feature prerequisite="true">wrap</feature>

    <!-- Spring-DM needed by pentaho-spring-dm-extender -->
    <feature prerequisite="true">spring-dm</feature>

    <bundle>mvn:commons-logging/commons-logging/${commons-logging.version}</bundle>
    <bundle>mvn:com.googlecode.json-simple/json-simple/${json.simple.version}</bundle>
    <bundle>mvn:com.google.guava/guava/${google.guava.version}</bundle>
    <bundle>mvn:commons-io/commons-io/${commons.io.version}</bundle>
    <bundle>mvn:commons-lang/commons-lang/${commons.lang.version}</bundle>
    <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
    <bundle>mvn:pentaho/pentaho-platform-plugin-deployer/${project.version}</bundle>
    <bundle>mvn:pentaho/pentaho-bundle-resource-manager/${project.version}</bundle>
    <bundle>mvn:pentaho/pentaho-spring-dm-extender/${project.version}</bundle>
    <feature version="${project.version}">pentaho-webjars-deployer</feature>
  </feature>

  <feature name="pentaho-base" version="1.0">
    <feature prerequisite="true">standard</feature>

    <feature prerequisite="true">pentaho-osgi-utils</feature>
    <feature prerequisite="true">pentaho-deployers</feature>
    <feature prerequisite="true">pentaho-cache-system</feature>

    <feature>pentaho-i18n</feature>

    <bundle>wrap:mvn:org.pentaho/json/${pentaho-json.version}</bundle>
    <bundle>blueprint:mvn:pentaho/pentaho-blueprint-activators/${project.version}/xml/standard</bundle>

    <bundle>mvn:pentaho/pdi-osgi-bridge-activator/${pdi-osgi-bridge.version}</bundle>

    <bundle>mvn:org.slf4j/osgi-over-slf4j/${slf4j.version}</bundle>
    <bundle>mvn:commons-logging/commons-logging/${commons-logging.version}</bundle>
    <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
    <bundle>mvn:net.java.dev.jna/jna/${net.java.dev.jna.version}</bundle>
    <bundle>mvn:net.java.dev.jna/jna-platform/${net.java.dev.jna.version}</bundle>
    <conditional>
      <condition>http</condition>
      <bundle>mvn:org.apache.felix/org.apache.felix.http.api/${felix.http.api.version}</bundle>
    </conditional>
  </feature>

  <feature name="pentaho-webjars-deployer" version="${project.version}">
    <bundle>mvn:pentaho/pentaho-webjars-deployer/${pentaho-osgi-bundles.version}</bundle>
  </feature>

  <feature name="pentaho-client" version="1.0">
    <feature prerequisite="true">pentaho-client-minimal</feature>

    <feature>pentaho-webpackage</feature>
    <feature>pentaho-big-data-plugin-osgi</feature>
    <feature>pentaho-streaming-feature</feature>
    <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
  </feature>

  <feature name="pentaho-kerberos-jaas" version="1.0">
    <configfile finalname="/etc/pentaho.kerberos.cfg">mvn:pentaho/pentaho-osgi-config/${project.version}/cfg/pentaho-kerberos</configfile>
    <bundle>blueprint:mvn:pentaho/pentaho-blueprint-activators/${project.version}/xml/krb5-jaas</bundle>
  </feature>

  <feature name="ael-security"  version="1.0" />

  <feature name="pentaho-spoon" version="${project.version}">
    <bundle>mvn:pentaho/pentaho-kettle-repository-locator-impl-spoon/${pentaho-osgi-bundles.version}</bundle>
    <feature>pdi-platform</feature>
  </feature>

  <feature name="pentaho-client-minimal" version="1.0">
    <feature prerequisite="true">pentaho-base</feature>

    <bundle>mvn:pentaho/pentaho-mongo-utils/${pentaho-mongo-utils.version}</bundle>
    <bundle>wrap:mvn:pentaho/pentaho-mongodb-plugin/${pentaho-mongodb-plugin.version}</bundle>
    <bundle>wrap:mvn:org.pentaho.di.plugins/meta-inject-plugin/${pdi.version}</bundle>
    <bundle>mvn:org.mongodb/mongo-java-driver/${mongo.java.driver.version}</bundle>
    <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
  </feature>

  <feature name="pdi-platform" version="${project.version}">
    <!-- spring was "magically available" because of cxf/3.0.13 feature, but now needs
         to be explicitly declared since only cxf-jaxrs feature is being loaded -->
    <feature version="[${spring32.bundle.version},3.3)">spring</feature>
    <bundle>mvn:pentaho/pentaho-pdi-platform/${pentaho-osgi-bundles.version}</bundle>
  </feature>

  <feature name="pentaho-cache-system" version="1.0">
    <feature prerequisite="true">wrap</feature>

    <feature>transaction</feature>

    <bundle>mvn:pentaho/pentaho-cache-manager-api/${pentaho-osgi-bundles.version}</bundle>
    <bundle>mvn:pentaho/guava-cache-provider/${pentaho-osgi-bundles.version}</bundle>
    <bundle>mvn:pentaho/pentaho-ehcache-provider/${pentaho-osgi-bundles.version}</bundle>
    <bundle>wrap:mvn:org.ehcache/jcache/${org.ehcache.version}</bundle>
    <bundle>mvn:net.sf.ehcache/ehcache/${net.sf.ehcache.version}</bundle>
    <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
  </feature>

  <!-- Overriding standard one to exclude log bundle which will not work without pax-logging -->
  <feature name="pentaho-jms">
    <configfile finalname="/etc/pentaho.jms.cfg">mvn:pentaho/pentaho-osgi-config/${project.version}/cfg/pentaho-jms
    </configfile>
    <feature>jms</feature>
    <feature>activemq</feature>
    <bundle start-level="90">wrap:blueprint:mvn:pentaho/pentaho-blueprint-activators/${project.version}/xml/jms$overwrite=merge&amp;Import-Package=javax.jms;version="[1.1,1.1]"</bundle>
    <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
  </feature>

  <feature name="pentaho-camel-jms" version="1.0">
    <feature>camel-jms</feature>
    <feature>activemq-camel</feature>
    <feature>pentaho-jms</feature>
    <bundle start-level="90">blueprint:mvn:pentaho/pentaho-blueprint-activators/${project.version}/xml/camel-jms</bundle>
    <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
  </feature>

  <feature name="pentaho-tinkerpop-gremlin" version="2.6">
    <bundle>wrap:mvn:com.tinkerpop.gremlin/gremlin-java/${com.tinkerpop.version}</bundle>
    <bundle>wrap:mvn:com.tinkerpop/pipes/${com.tinkerpop.version}</bundle>
    <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
  </feature>

  <feature name="pentaho-metaverse" version="${project.version}">
    <details>Provides data lineage capabilities</details>
    <configfile finalname="/etc/pentaho.metaverse.cfg">
      mvn:pentaho/pentaho-osgi-config/${project.version}/cfg/pentaho-metaverse
    </configfile>

    <feature>pentaho-client</feature>
    <feature>pentaho-tinkerpop-gremlin</feature>

    <conditional>
      <condition>http</condition>
      <feature>pentaho-metaverse-web</feature>
    </conditional>

    <feature>pentaho-fasterxml</feature>
    <bundle>mvn:pentaho/pentaho-metaverse-core/${pentaho-metaverse.version}</bundle>
  </feature>

  <feature name="pentaho-fasterxml" version="1.0">
    <bundle>wrap:mvn:net.sf.flexjson/flexjson/2.1</bundle>
    <bundle>mvn:com.fasterxml.jackson.core/jackson-databind/${fasterxml-jackson.version}</bundle>
    <bundle>mvn:com.fasterxml.jackson.core/jackson-annotations/${fasterxml-jackson.version}</bundle>
    <bundle>mvn:com.fasterxml.jackson.core/jackson-core/${fasterxml-jackson.version}</bundle>
    <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
  </feature>

  <feature name="pentaho-metaverse-web" version="${project.version}">
    <feature>http</feature>
    <feature>http-whiteboard</feature>
    <feature>cxf-jaxrs</feature>
    <feature>pentaho-jackson</feature>

    <bundle>mvn:pentaho/pentaho-metaverse-web/${pentaho-metaverse.version}</bundle>
  </feature>

  <feature name="build-helper" description="This is never used in production, exists only to facilitate the build">
    <bundle>mvn:org.apache.felix/org.apache.felix.http.bridge/${felix.http.bridge.version}</bundle>
    <bundle>mvn:org.apache.karaf.kar/org.apache.karaf.kar.core/${karaf.version}</bundle>
    <bundle>mvn:org.apache.aries.transaction/org.apache.aries.transaction.manager/1.1.1</bundle>
    <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
  </feature>

  <feature name="pdi-data-refinery" description="pentaho data refinery">
    <configfile finalname="/etc/pentaho.geo.roles.cfg">mvn:pentaho/pentaho-osgi-config/${project.version}/cfg/pentaho-geo-roles</configfile>
    <feature>pentaho-dataservice</feature>

    <bundle>wrap:mvn:pentaho/pentaho-modeler/${pentaho-modeler.version}</bundle>

    <bundle>wrap:mvn:jfree/jcommon/${jfree.jcommon.version}</bundle>
    <bundle>mvn:com.fasterxml.jackson.module/jackson-module-jaxb-annotations/${fasterxml-jackson.version}</bundle>
    <bundle>mvn:pentaho/data-refinery-pdi-plugin/${pdi-data-refinery-plugin.version}</bundle>
  </feature>

  <feature name="community-edition" version="1.0" description="Marker feature for Community Edition Builds"/>

  <feature name="pentaho-i18n" version="${project.version}">
    <bundle>mvn:pentaho/pentaho-i18n-bundle/${pentaho-osgi-bundles.version}</bundle>
    <conditional>
      <condition>cxf-jaxrs</condition>
      <feature>http-whiteboard</feature>
      <bundle>mvn:pentaho/pentaho-i18n-webservice-bundle/${pentaho-osgi-bundles.version}</bundle>
    </conditional>
  </feature>

  <!-- Overriding cxf-http-provider to ensure that Jetty isn't started -->
  <feature name="cxf-http-provider" version="${cxf.version}">
  </feature>

  <!-- Separate feature for jackson-* bundles in scope of BACKLOG-20783 -->
  <feature name="pentaho-jackson" description="Jackson 2.9.x support" version="1.0">
    <bundle>mvn:com.fasterxml.jackson.core/jackson-core/${fasterxml-jackson.version}</bundle>
    <bundle>mvn:com.fasterxml.jackson.core/jackson-annotations/${fasterxml-jackson.version}</bundle>
    <bundle>mvn:com.fasterxml.jackson.core/jackson-databind/${fasterxml-jackson.version}</bundle>
    <bundle>mvn:com.fasterxml.jackson.jaxrs/jackson-jaxrs-json-provider/${fasterxml-jackson.version}</bundle>
    <bundle>mvn:com.fasterxml.jackson.jaxrs/jackson-jaxrs-base/${fasterxml-jackson.version}</bundle>
    <bundle>mvn:com.fasterxml.jackson.module/jackson-module-jaxb-annotations/${fasterxml-jackson.version}</bundle>

    <!-- TODO: Temporary fix, review -->
    <!--bundle>mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jsr339-api-2.0/2.4.0</bundle-->
  </feature>
</features>
