<!--
 ~ This program is free software; you can redistribute it and/or modify it under the
 ~ terms of the GNU Lesser General Public License, version 2.1 as published by the Free Software
 ~ Foundation.
 ~
 ~ You should have received a copy of the GNU Lesser General Public License along with this
 ~ program; if not, you can obtain a copy at http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html
 ~ or from the Free Software Foundation, Inc.,
 ~ 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 ~
 ~ This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 ~ without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 ~ See the GNU Lesser General Public License for more details.
 ~
 ~ Copyright 2014 Pentaho Corporation. All rights reserved.
 -->

<features name="pentaho-karaf-features-standard" xmlns="http://karaf.apache.org/xmlns/features/v1.2.1">

  <!--This feature never works reliably due to the asynchronous loading of blueprint files-->
  <!--Putting the feature back so these dependencies will be in the local maven repo in /system-->
  <feature name="pentaho-deployers" version="1.0">
    <bundle>mvn:commons-logging/commons-logging/${commons.logging.version}</bundle>
    <bundle>mvn:com.googlecode.json-simple/json-simple/${json.simple.version}</bundle>
    <bundle>mvn:com.google.guava/guava/${google.guava.version}</bundle>
    <bundle>mvn:commons-io/commons-io/${commons.io.version}</bundle>
    <bundle>mvn:commons-lang/commons-lang/${commons.lang.version}</bundle>
    <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
    <bundle>mvn:pentaho/pentaho-platform-plugin-deployer/${project.version}</bundle>
    <feature version="${project.version}">pentaho-webjars-deployer</feature>
  </feature>

  <feature name="pentaho-base" version="1.0">
    <feature>pentaho-deployers</feature>
    <feature>pentaho-cache-system</feature>
    <bundle>blueprint:mvn:pentaho/pentaho-blueprint-activators/${project.version}/xml/standard</bundle>
    <bundle>mvn:org.slf4j/osgi-over-slf4j/${osgi.over.slf4j.version}</bundle>
    <bundle>mvn:commons-logging/commons-logging/${commons.logging.version}</bundle>
    <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
    <conditional>
      <condition>http</condition>
      <bundle>mvn:org.apache.felix/org.apache.felix.http.api/${org.apache.felix.http.version}</bundle>
    </conditional>
    <bundle>mvn:org.apache.mina/mina-core/${org.apache.mina.version}</bundle>
    <bundle>mvn:pentaho/pentaho-osgi-utils-impl/${project.version}</bundle>
  </feature>

  <feature name="pentaho-requirejs-osgi-manager" version="${project.version}">
    <bundle>mvn:pentaho/pentaho-requirejs-utils/${project.version}</bundle>
    <bundle>wrap:mvn:com.github.zafarkhaja/java-semver/${com.github.zafarkhaja.version}</bundle>
    <bundle>mvn:pentaho/pentaho-requirejs-osgi-manager/${project.version}</bundle>
  </feature>

  <feature name="pentaho-webjars-deployer" version="${project.version}">
    <bundle>mvn:pentaho/pentaho-requirejs-utils/${project.version}</bundle>
    <bundle>mvn:pentaho/pentaho-webjars-deployer/${project.version}</bundle>
  </feature>

  <feature name="pentaho-client" version="1.0">
    <feature>pentaho-client-minimal</feature>
    <feature>pentaho-big-data-plugin-osgi</feature>
   <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
  </feature>

  <feature name="pentaho-client-minimal" version="1.0">
    <feature>pentaho-base</feature>
    <bundle>mvn:pentaho/pentaho-mongo-utils/${project.version}</bundle>
    <bundle>wrap:mvn:pentaho/pentaho-mongodb-plugin/${project.version}</bundle>
    <bundle>mvn:org.mongodb/mongo-java-driver/${mongo.java.driver.version}</bundle>
    <bundle>mvn:pentaho/pdi-osgi-bridge-activator/${project.version}</bundle>
   <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
  </feature>

  <feature name="pdi-dataservice-client" version="${project.version}">
    <feature>pentaho-base</feature>
    <bundle>mvn:pentaho/pdi-dataservice-client-plugin/${project.version}</bundle>
   <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
  </feature>

  <feature name="pdi-dataservice" version="${project.version}">
    <feature>pdi-dataservice-client</feature>
    <bundle>mvn:pentaho/pdi-dataservice-server-plugin/${project.version}</bundle>
    <bundle>mvn:org.mongodb/mongo-java-driver/${mongo.java.driver.version}</bundle>
   <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
  </feature>

  <feature name="pdi-marketplace" version="${project.version}">
    <feature>pentaho-requirejs-osgi-manager</feature>

    <configfile finalname="/etc/pentaho.marketplace.di.cfg">
      mvn:org.pentaho/pentaho-marketplace-di/${project.version}/cfg/pentaho-marketplace-config
    </configfile>

    <bundle>wrap:mvn:net.sf.flexjson/flexjson/${net.sf.flexjson.version}</bundle>
    <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>

    <!-- START client side dependencies -->
    <bundle>mvn:pentaho/pentaho-angular-bundle/${dependency.pentaho-osgi-bundles.revision}</bundle>
    <bundle>pentaho-webjars:mvn:org.webjars.bower/angular-sanitize/${angular.sanitize.version}</bundle>
    <bundle>pentaho-webjars:mvn:org.webjars/underscorejs/${underscorejs.version}</bundle>
    <bundle>pentaho-platform-plugin-mvn:pentaho/common-ui/${dependency.common-ui.revision}/zip</bundle>
    <!-- END -->

    <!-- commons-codec is necessary for commons-httpclient -->
    <bundle>mvn:commons-codec/commons-codec/${commons.codec.version}</bundle>
    <bundle>wrap:mvn:commons-httpclient/commons-httpclient/${commons.httpclient.version}</bundle>

    <bundle>mvn:org.pentaho/pentaho-marketplace-di/${project.version}</bundle>
  </feature>

  <feature name="pentaho-marketplace" version="${project.version}">
    <feature>pentaho-requirejs-osgi-manager</feature>

    <configfile finalname="/etc/pentaho.marketplace.ba.cfg">
      mvn:org.pentaho/pentaho-marketplace-ba/${project.version}/cfg/pentaho-marketplace-config
    </configfile>

    <bundle>wrap:mvn:net.sf.flexjson/flexjson/${net.sf.flexjson.version}</bundle>
    <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>

    <!-- START client side dependencies -->
    <bundle>mvn:pentaho/pentaho-angular-bundle/${dependency.pentaho-osgi-bundles.revision}</bundle>
    <bundle>pentaho-webjars:mvn:org.webjars.bower/angular-sanitize/${angular.sanitize.version}</bundle>
    <bundle>pentaho-webjars:mvn:org.webjars/underscorejs/${underscorejs.version}</bundle>
    <!-- END -->

    <bundle>mvn:org.pentaho/pentaho-marketplace-ba/${project.version}/</bundle>
  </feature>

  <feature name="pentaho-cache-system" version="1.0">
    <feature>transaction</feature>
    <bundle>mvn:pentaho/pentaho-cache-manager-api/${project.version}</bundle>
    <bundle>mvn:pentaho/guava-cache-provider/${project.version}</bundle>
    <bundle>mvn:pentaho/pentaho-ehcache-provider/${project.version}</bundle>
    <bundle>wrap:mvn:org.ehcache/jcache/${org.ehcache.version}</bundle>
    <bundle>mvn:net.sf.ehcache/ehcache/${net.sf.ehcache.version}</bundle>
	<bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
  </feature>

  <!-- Overriding standard one to exclude log bundle which will not work without pax-logging -->
  <feature name="pentaho-jms">
    <configfile finalname="/etc/pentaho.jms.cfg">mvn:pentaho/pentaho-osgi-config/${project.version}/cfg/pentaho-jms
    </configfile>
    <feature>jms</feature>
    <feature>activemq</feature>
    <bundle start-level="90">blueprint:mvn:pentaho/pentaho-blueprint-activators/${project.version}/xml/jms</bundle>
   <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
  </feature>

  <feature name="pentaho-camel-jms" version="1.0">
    <feature>camel-jms</feature>
    <feature>activemq-camel</feature>
    <feature>pentaho-jms</feature>
    <bundle start-level="90">blueprint:mvn:pentaho/pentaho-blueprint-activators/${project.version}/xml/camel-jms</bundle>
   <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
  </feature>

  <feature name="pentaho-tinkerpop-gremlin" version="2.6">
    <bundle>wrap:mvn:com.tinkerpop.gremlin/gremlin-java/${com.tinkerpop.version}</bundle>
    <bundle>wrap:mvn:com.tinkerpop/pipes/${com.tinkerpop.version}</bundle>
	 <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
  </feature>

  <feature name="pentaho-metaverse" version="${project.version}">
    <details>Provides data lineage capabilities</details>
    <configfile finalname="/etc/pentaho.metaverse.cfg">
      mvn:pentaho/pentaho-osgi-config/${project.version}/cfg/pentaho-metaverse
    </configfile>

    <feature>pentaho-client</feature>
    <feature>pentaho-tinkerpop-gremlin</feature>
    <conditional>
      <condition>http</condition>    
      <feature>pentaho-metaverse-web</feature>
    </conditional> 

    <bundle>wrap:mvn:net.sf.flexjson/flexjson/${net.sf.flexjson.version}</bundle>
    <bundle>mvn:com.fasterxml.jackson.core/jackson-databind/${com.fasterxml.jackson.core.version}</bundle>
    <bundle>mvn:com.fasterxml.jackson.core/jackson-annotations/${com.fasterxml.jackson.core.version}</bundle>
    <bundle>mvn:com.fasterxml.jackson.core/jackson-core/${com.fasterxml.jackson.core.version}</bundle>
    <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>

    <bundle>mvn:pentaho/pentaho-metaverse-core/${project.version}</bundle>
  </feature>

  <feature name="pentaho-metaverse-web" version="${project.version}">
    <feature>http</feature>
    <feature>http-whiteboard</feature>
    <feature>cxf</feature>

    <bundle>mvn:org.codehaus.jackson/jackson-core-asl/${org.codehaus.jackson.version}</bundle>
    <bundle>mvn:org.codehaus.jackson/jackson-mapper-asl/${org.codehaus.jackson.version}</bundle>
    <bundle>mvn:org.codehaus.jackson/jackson-jaxrs/${org.codehaus.jackson.version}</bundle>

    <bundle>mvn:pentaho/pentaho-metaverse-web/${project.version}</bundle>
  </feature>  

<!-- Overriding KAR to load 3.0.5 of core, remove once 3.0.5 is released -->
  <feature name="kar" version="3.7.5" description="Provide KAR (KARaf archive) support" resolver="(obr)">
    <bundle start-level="30">mvn:org.apache.karaf.kar/org.apache.karaf.kar.core/3.0.5</bundle>
    <bundle start-level="30">mvn:org.apache.karaf.kar/org.apache.karaf.kar.command/3.0.3</bundle>
    <bundle start-level="30">mvn:org.apache.karaf.deployer/org.apache.karaf.deployer.kar/3.0.3</bundle>
       <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
  </feature>


  <feature name="build-helper" description="This is never used in production, exists only to facilitate the build">
    <bundle>mvn:org.apache.felix/org.apache.felix.http.bridge/${org.apache.felix.http.version}</bundle>
    <bundle>mvn:org.apache.karaf.kar/org.apache.karaf.kar.core/3.0.5</bundle>
    <bundle>mvn:org.apache.aries.transaction/org.apache.aries.transaction.manager/1.1.1</bundle>
	<bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
  </feature>

  <feature name="pdi-data-refinery" description="pentaho data refinery">
    <configfile finalname="/etc/pentaho.geo.roles.cfg">
      mvn:pentaho/pentaho-osgi-config/${project.version}/cfg/pentaho-geo-roles
    </configfile>
    <feature>pdi-dataservice</feature>

    <bundle>wrap:mvn:pentaho/pentaho-modeler/${project.version}</bundle>

    <bundle>wrap:mvn:jfree/jcommon/${jfree.jcommon.version}</bundle>
	<bundle>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xstream/${org.apache.servicemix.bundles.xstream.version}</bundle>
    <bundle>mvn:pentaho/data-refinery-pdi-plugin/${project.version}</bundle>
  </feature>
  
   <!-- Overriding CXF to ensure that Jetty isn't started -->
    <feature name="cxf" version="3.7.5" resolver='(obr)'>
        <feature version="[3,4)">spring</feature>
        <feature version="[1.2,2)">spring-dm</feature>
        <feature version="${cxf.karaf.version}">cxf-core</feature>
        <feature version="${cxf.karaf.version}">cxf-jaxws</feature>
        <feature version="${cxf.karaf.version}">cxf-jaxrs</feature>
        <feature version="${cxf.karaf.version}">cxf-databinding-jaxb</feature>
        <feature version="${cxf.karaf.version}">cxf-databinding-aegis</feature>
        <feature version="${cxf.karaf.version}">cxf-databinding-xmlbeans</feature>
        <!-- <feature version="${cxf.karaf.version}">cxf-bindings-corba</feature> -->
        <feature version="${cxf.karaf.version}">cxf-bindings-coloc</feature>
        <feature version="${cxf.karaf.version}">cxf-bindings-object</feature>
        <!-- <feature version="${cxf.karaf.version}">cxf-http-jetty</feature> -->
        <feature version="${cxf.karaf.version}">cxf-transports-local</feature>
        <!-- <feature version="${cxf.karaf.version}">cxf-transports-jms</feature> -->
        <!-- <feature version="${cxf.karaf.version}">cxf-transports-udp</feature> -->
        <feature version="${cxf.karaf.version}">cxf-xjc-runtime</feature>
        <feature version="${cxf.karaf.version}">cxf-ws-security</feature>
        <feature version="${cxf.karaf.version}">cxf-ws-rm</feature>
        <!-- <feature version="${cxf.karaf.version}">cxf-ws-mex</feature> -->
        <feature version="${cxf.karaf.version}">cxf-javascript</feature>
        <!-- <feature version="${cxf.karaf.version}">cxf-frontend-javascript</feature> -->
        <!-- <feature version="${cxf.karaf.version}">cxf-features-clustering</feature> -->
        <bundle>mvn:commons-collections/commons-collections/${commons.collections.version}</bundle>
    </feature>

    <!-- Overriding activemq to exclude xtreaam 1.4.7 version  -->
    <feature name="activemq" description="ActiveMQ broker libraries" version="5.10.0" resolver="(obr)" start-level="50">
        <feature>http</feature>
        <feature version="5.10.0">activemq-client</feature>
        <bundle>mvn:org.apache.activemq/activemq-karaf/5.10.0</bundle>
        <bundle dependency="true">mvn:org.apache.xbean/xbean-spring/3.16</bundle>
        <bundle dependency="true">mvn:commons-collections/commons-collections/3.2.2</bundle>
        <bundle dependency='true'>mvn:commons-lang/commons-lang/2.6</bundle>
        <bundle dependency="true">mvn:commons-codec/commons-codec/1.4</bundle>
        <bundle dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.velocity/1.7_6</bundle>
        <bundle dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jasypt/1.9.1_1</bundle>
        <bundle dependency="true">mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.stax-api-1.0/1.9.0</bundle>
        <bundle dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xpp3/1.1.4c_5</bundle>
        <bundle dependency="true">mvn:joda-time/joda-time/1.6.2</bundle>
        <bundle dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xstream/1.4.9_1</bundle>
        <bundle dependency="true">mvn:org.apache.aries.transaction/org.apache.aries.transaction.manager/1.0.0</bundle>
        <bundle dependency="true">mvn:org.apache.geronimo.specs/geronimo-j2ee-connector_1.5_spec/2.0.0</bundle>
        <bundle dependency="true">mvn:org.apache.aries/org.apache.aries.util/1.0.0</bundle>
        <bundle dependency="true">mvn:org.apache.activemq/activeio-core/3.1.4</bundle>
        <bundle dependency="true">mvn:org.codehaus.jettison/jettison/1.3.5</bundle>
        <bundle dependency="true">mvn:org.codehaus.jackson/jackson-core-asl/1.9.12</bundle>
        <bundle dependency="true">mvn:org.codehaus.jackson/jackson-mapper-asl/1.9.12</bundle>
        <bundle dependency="true">mvn:org.scala-lang/scala-library/2.11.0</bundle>
    </feature>
    <feature name="activemq-client" description="ActiveMQ client libraries" version="5.10.0" resolver="(obr)" start-level="50">
        <feature version="[3.1,4)">spring</feature>
        <bundle dependency="true">mvn:org.apache.geronimo.specs/geronimo-annotation_1.0_spec/1.1.1</bundle>
        <bundle dependency="true">mvn:org.apache.geronimo.specs/geronimo-jta_1.1_spec/1.1.1</bundle>
        <bundle dependency="true">mvn:org.apache.geronimo.specs/geronimo-jms_1.1_spec/1.1.1</bundle>
        <bundle dependency="true">mvn:org.apache.geronimo.specs/geronimo-j2ee-management_1.1_spec/1.0.1</bundle>
        <bundle dependency="true">mvn:org.jvnet.jaxb2_commons/jaxb2-basics-runtime/0.6.4</bundle>
        <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxb-impl/2.2.1.1_2</bundle>
        <bundle dependency="false">mvn:commons-pool/commons-pool/1.6</bundle>
        <bundle dependency="false">mvn:commons-net/commons-net/3.3</bundle>
        <bundle dependency='true'>mvn:org.apache.zookeeper/zookeeper/3.4.5</bundle>
        <bundle dependency="false">mvn:org.apache.xbean/xbean-spring/3.16</bundle>
        <bundle>mvn:org.apache.activemq/activemq-osgi/5.10.0</bundle>
    </feature>
    <feature name="activemq-camel" version="5.10.0" resolver="(obr)" start-level="50">
        <feature version="5.10.0">activemq-client</feature>
        <bundle>mvn:org.apache.activemq/activemq-camel/5.10.0</bundle>
        <feature version="[2.12,3)">camel-jms</feature>
        <feature version="[2.12,3)">camel</feature>
    </feature>
    <!-- Overriding camel-xstream to replace xtreaam 1.4.7 version with 1.4.9  -->	
    <feature name='camel-xstream' version='2.16.3' resolver='(obr)' start-level='50'>
        <bundle dependency='true'>mvn:org.codehaus.jettison/jettison/1.3.5</bundle>
        <feature version='2.14.3'>camel-core</feature>
        <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xpp3/1.1.4c_7</bundle>
        <bundle dependency='true'>mvn:joda-time/joda-time/1.6.2</bundle>
        <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jdom/1.1_4</bundle>
        <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.dom4j/1.6.1_5</bundle>
        <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.kxml2/2.3.0_2</bundle>
        <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xstream/1.4.9_1</bundle>
        <bundle>mvn:org.apache.camel/camel-xstream/2.16.3</bundle>
  </feature>
  <!-- Overriding camel-salesforce to replace xtreaam 1.4.7 version with 1.4.9  -->
  <feature name='camel-salesforce' version='2.16.3' resolver='(obr)' start-level='50'>
    <feature>jetty</feature>
    <feature version='2.14.3'>camel-core</feature>
    <bundle dependency='true'>mvn:org.codehaus.jackson/jackson-mapper-asl/1.9.12</bundle>
    <bundle dependency='true'>mvn:org.codehaus.jackson/jackson-core-asl/1.9.12</bundle>
    <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xstream/1.4.9_1</bundle>
    <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xpp3/1.1.4c_7</bundle>
    <bundle dependency='true'>mvn:org.apache.geronimo.specs/geronimo-servlet_3.0_spec/1.0</bundle>
    <bundle dependency='true'>mvn:org.cometd.java/cometd-java-client/2.4.3</bundle>
    <bundle dependency='true'>mvn:org.cometd.java/bayeux-api/2.4.3</bundle>
    <bundle dependency='true'>mvn:org.cometd.java/cometd-java-common/2.4.3</bundle>
    <bundle dependency='true'>mvn:joda-time/joda-time/2.5</bundle>
    <bundle>mvn:org.apache.camel/camel-salesforce/2.16.3</bundle>
  </feature>
  <!-- Overriding camel-optaplanner to replace xtreaam 1.4.7 version with 1.4.9  -->
  <feature name='camel-optaplanner' version='2.16.3' resolver='(obr)' start-level='50'>
    <details>The camel-optaplanner feature can only run on a SUN JVM. You need to add the package com.sun.tools.xjc to the java platform packages in the etc/jre.properties file.</details>
    <feature version='2.14.3'>camel-core</feature>
    <bundle dependency='true'>mvn:com.google.guava/guava/17.0</bundle>
    <bundle dependency='true'>mvn:org.apache.commons/commons-math3/3.3</bundle>
    <bundle dependency='true'>mvn:commons-lang/commons-lang/2.6</bundle>
    <bundle dependency='true'>mvn:commons-io/commons-io/1.4</bundle>
    <bundle dependency='true'>mvn:commons-collections/commons-collections/3.2.2</bundle>
    <bundle dependency='true'>mvn:org.optaplanner/optaplanner-core/6.1.0.Final</bundle>
    <bundle dependency='true'>mvn:org.kie/kie-api/6.1.0.Final</bundle>
    <bundle dependency='true'>mvn:org.kie/kie-internal/6.1.0.Final</bundle>
    <bundle dependency='true'>mvn:org.drools/drools-core/6.1.0.Final</bundle>
    <bundle dependency='true'>mvn:org.drools/drools-compiler/6.1.0.Final</bundle>
    <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxb-xjc/2.2.1.1_2</bundle>
    <!-- the ecj bundle on the central is malformed as both 'META-INF' and 'META-INF/MANIFEST.MF' entries are NOT the first 2 entries inside the jar when -->
    <!-- one verifies this through 'jar -tf ecj-4.2.2.jar'. one possible workaround for this is to make use of the wrap protocol. -->
    <bundle dependency='true'>wrap:mvn:org.eclipse.jdt.core.compiler/ecj/4.2.2</bundle>
    <bundle dependency='true'>mvn:org.mvel/mvel2/2.2.1.Final</bundle>
    <bundle dependency='true'>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xstream/1.4.9_1</bundle>
    <bundle dependency='true'>mvn:com.google.protobuf/protobuf-java/2.5.0</bundle>
    <bundle dependency='true'>mvn:com.google.guava/guava/17.0</bundle>
    <bundle>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.javax-inject/1_2</bundle>
    <bundle>mvn:org.apache.camel/camel-optaplanner/2.16.3</bundle>
  </feature>
</features>
